<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gec.piecework.mapper.WireMapper">
  <resultMap id="BaseResultMap" type="com.gec.piecework.pojo.Wire">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="unit" jdbcType="CHAR" property="unit" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="lumpSum" jdbcType="DECIMAL" property="lumpsum" />
    <result column="orderNum" jdbcType="INTEGER" property="ordernum" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="RemainingAmo" jdbcType="INTEGER" property="remainingamo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, unit, price, lumpSum, orderNum, createTime, updateTime, note, RemainingAmo
  </sql>
  <select id="selectByExample" parameterType="com.gec.piecework.pojo.WireExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wire
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wire
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gec.piecework.pojo.WireExample">
    delete from wire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gec.piecework.pojo.Wire">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wire (amount, unit, price, 
      lumpSum, orderNum, createTime, 
      updateTime, note, RemainingAmo
      )
    values (#{amount,jdbcType=INTEGER}, #{unit,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, 
      #{lumpsum,jdbcType=DECIMAL}, #{ordernum,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}, #{remainingamo,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gec.piecework.pojo.Wire">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wire
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        amount,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="lumpsum != null">
        lumpSum,
      </if>
      <if test="ordernum != null">
        orderNum,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="remainingamo != null">
        RemainingAmo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="lumpsum != null">
        #{lumpsum,jdbcType=DECIMAL},
      </if>
      <if test="ordernum != null">
        #{ordernum,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="remainingamo != null">
        #{remainingamo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gec.piecework.pojo.WireExample" resultType="java.lang.Long">
    select count(*) from wire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wire
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=CHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.lumpsum != null">
        lumpSum = #{record.lumpsum,jdbcType=DECIMAL},
      </if>
      <if test="record.ordernum != null">
        orderNum = #{record.ordernum,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.remainingamo != null">
        RemainingAmo = #{record.remainingamo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wire
    set id = #{record.id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=CHAR},
      price = #{record.price,jdbcType=DECIMAL},
      lumpSum = #{record.lumpsum,jdbcType=DECIMAL},
      orderNum = #{record.ordernum,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR},
      RemainingAmo = #{record.remainingamo,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gec.piecework.pojo.Wire">
    update wire
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="lumpsum != null">
        lumpSum = #{lumpsum,jdbcType=DECIMAL},
      </if>
      <if test="ordernum != null">
        orderNum = #{ordernum,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="remainingamo != null">
        RemainingAmo = #{remainingamo,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gec.piecework.pojo.Wire">
    update wire
    set amount = #{amount,jdbcType=INTEGER},
      unit = #{unit,jdbcType=CHAR},
      price = #{price,jdbcType=DECIMAL},
      lumpSum = #{lumpsum,jdbcType=DECIMAL},
      orderNum = #{ordernum,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      RemainingAmo = #{remainingamo,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>